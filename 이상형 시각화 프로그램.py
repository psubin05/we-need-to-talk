# -*- coding: utf-8 -*-
"""오소기 아마도.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g3QanIYR76KcCV3Dfmmz3TMgFm9PNPu4
"""

!pip install diffusers transformers accelerate

from diffusers import StableDiffusionPipeline
import torch
from PIL import Image
from google.colab import files

# Stable Diffusion 모델 로드
def load_model():
    print("모델 로드 중...")
    pipe = StableDiffusionPipeline.from_pretrained("CompVis/stable-diffusion-v1-4", torch_dtype=torch.float16)
    pipe = pipe.to("cuda")  # GPU 사용
    print("모델 로드 완료!")
    return pipe

# 사용자 입력 받기
def get_user_input():
    print("이상형 정보를 입력하세요!")
    gender = input("성별 (예: 남자, 여자): ")
    eye_shape = input("눈 모양 (예: 크다, 날카롭다, 동그랗다): ")
    face_shape = input("얼굴형 (예: 갸름하다, 각지다, 둥글다): ")
    hair_style = input("머리 스타일 (예: 긴 머리, 짧은 머리, 곱슬머리): ")
    skin_tone = input("피부색 (예: 밝은 피부, 중간 피부, 어두운 피부): ")
    special_feature = input("특징적인 매력 포인트 (예: 큰 입술, 높은 코): ")
    reference_person = input("닮았으면 하는 사람 (영어 이름으로 입력): ")
    return {
        "gender": gender,
        "eye_shape": eye_shape,
        "face_shape": face_shape,
        "hair_style": hair_style,
        "skin_tone": skin_tone,
        "special_feature": special_feature,
        "reference_person": reference_person,
    }

# 프롬프트 생성
def create_prompt(features):
    prompt = (
        f"A hyper-realistic portrait of a {features['gender']} with {features['eye_shape']} eyes, "
        f"a {features['face_shape']} face shape, {features['hair_style']} hairstyle, "
        f"{features['skin_tone']} skin tone, and {features['special_feature']}. "
        f"The person resembles {features['reference_person']}. "
        "Digital painting, cinematic lighting, ultra-detailed."
    )
    return prompt

# 이미지 생성
def generate_image(prompt, pipe):
    print("이미지 생성 중... (시간이 조금 걸릴 수 있습니다)")
    image = pipe(prompt).images[0]
    return image

# 이미지 저장 및 다운로드
def save_and_download_image(image, filename="generated_image.png"):
    image.save(filename)
    print(f"이미지가 '{filename}'으로 저장되었습니다!")
    files.download(filename)

# 메인 실행
if __name__ == "__main__":
    # 모델 로드
    pipe = load_model()

    # 사용자 입력
    user_features = get_user_input()
    prompt = create_prompt(user_features)
    print(f"\n생성된 프롬프트: {prompt}")

    # 이미지 생성
    generated_image = generate_image(prompt, pipe)

    # 이미지 표시
    generated_image.show()

    # 이미지 저장 및 다운로드
    save_and_download_image(generated_image)

!pip install diffusers transformers accelerate

